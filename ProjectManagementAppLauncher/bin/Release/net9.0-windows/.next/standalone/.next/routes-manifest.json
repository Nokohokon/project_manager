{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "rewrites": {
    "beforeFiles": [],
    "afterFiles": [],
    "fallback": []
  },
  "dynamicRoutes": [
    {
      "page": "/api/calendar/[id]",
      "regex": "^/api/calendar/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/calendar/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/contacts/[id]",
      "regex": "^/api/contacts/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/contacts/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/documents/[id]",
      "regex": "^/api/documents/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/documents/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/projects/[id]",
      "regex": "^/api/projects/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/projects/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/projects/[id]",
      "regex": "^/projects/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/projects/(?<nxtPid>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/analytics",
      "regex": "^/analytics(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/analytics(?:/)?$"
    },
    {
      "page": "/calendar",
      "regex": "^/calendar(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/calendar(?:/)?$"
    },
    {
      "page": "/crm",
      "regex": "^/crm(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/crm(?:/)?$"
    },
    {
      "page": "/documents",
      "regex": "^/documents(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/documents(?:/)?$"
    },
    {
      "page": "/emails",
      "regex": "^/emails(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/emails(?:/)?$"
    },
    {
      "page": "/notes",
      "regex": "^/notes(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/notes(?:/)?$"
    },
    {
      "page": "/notes/create",
      "regex": "^/notes/create(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/notes/create(?:/)?$"
    },
    {
      "page": "/projects",
      "regex": "^/projects(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/projects(?:/)?$"
    },
    {
      "page": "/projects/create",
      "regex": "^/projects/create(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/projects/create(?:/)?$"
    },
    {
      "page": "/settings",
      "regex": "^/settings(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/settings(?:/)?$"
    },
    {
      "page": "/timetracking",
      "regex": "^/timetracking(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/timetracking(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}